# coding: utf-8

"""
    Orders

    An order represents a payment between two or more parties. Use the Orders API to create, update, retrieve, authorize, and capture orders.

    The version of the OpenAPI document: 2.13
    Generated by: https://konfigthis.com
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from pay_pal_checkout_python_sdk import schemas  # noqa: F401


class VenmoWalletResponse(
    schemas.DictSchema
):
    """
    This class is auto generated by Konfig (https://konfigthis.com)

    Venmo wallet response.
    """


    class MetaOapg:
        
        class properties:
        
            @staticmethod
            def email_address() -> typing.Type['Email']:
                return Email
        
            @staticmethod
            def account_id() -> typing.Type['AccountId2']:
                return AccountId2
            
            
            class user_name(
                schemas.StrSchema
            ):
                pass
        
            @staticmethod
            def name() -> typing.Type['Name2']:
                return Name2
        
            @staticmethod
            def phone_number() -> typing.Type['Phone2']:
                return Phone2
        
            @staticmethod
            def address() -> typing.Type['AddressPortable2']:
                return AddressPortable2
        
            @staticmethod
            def attributes() -> typing.Type['VenmoWalletAttributesResponse']:
                return VenmoWalletAttributesResponse
            __annotations__ = {
                "email_address": email_address,
                "account_id": account_id,
                "user_name": user_name,
                "name": name,
                "phone_number": phone_number,
                "address": address,
                "attributes": attributes,
            }
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["email_address"]) -> 'Email': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["account_id"]) -> 'AccountId2': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["user_name"]) -> MetaOapg.properties.user_name: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["name"]) -> 'Name2': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["phone_number"]) -> 'Phone2': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["address"]) -> 'AddressPortable2': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["attributes"]) -> 'VenmoWalletAttributesResponse': ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["email_address", "account_id", "user_name", "name", "phone_number", "address", "attributes", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["email_address"]) -> typing.Union['Email', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["account_id"]) -> typing.Union['AccountId2', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["user_name"]) -> typing.Union[MetaOapg.properties.user_name, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["name"]) -> typing.Union['Name2', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["phone_number"]) -> typing.Union['Phone2', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["address"]) -> typing.Union['AddressPortable2', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["attributes"]) -> typing.Union['VenmoWalletAttributesResponse', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["email_address", "account_id", "user_name", "name", "phone_number", "address", "attributes", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        email_address: typing.Union['Email', schemas.Unset] = schemas.unset,
        account_id: typing.Union['AccountId2', schemas.Unset] = schemas.unset,
        user_name: typing.Union[MetaOapg.properties.user_name, str, schemas.Unset] = schemas.unset,
        name: typing.Union['Name2', schemas.Unset] = schemas.unset,
        phone_number: typing.Union['Phone2', schemas.Unset] = schemas.unset,
        address: typing.Union['AddressPortable2', schemas.Unset] = schemas.unset,
        attributes: typing.Union['VenmoWalletAttributesResponse', schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'VenmoWalletResponse':
        return super().__new__(
            cls,
            *args,
            email_address=email_address,
            account_id=account_id,
            user_name=user_name,
            name=name,
            phone_number=phone_number,
            address=address,
            attributes=attributes,
            _configuration=_configuration,
            **kwargs,
        )

from pay_pal_checkout_python_sdk.model.account_id2 import AccountId2
from pay_pal_checkout_python_sdk.model.address_portable2 import AddressPortable2
from pay_pal_checkout_python_sdk.model.email import Email
from pay_pal_checkout_python_sdk.model.name2 import Name2
from pay_pal_checkout_python_sdk.model.phone2 import Phone2
from pay_pal_checkout_python_sdk.model.venmo_wallet_attributes_response import VenmoWalletAttributesResponse
