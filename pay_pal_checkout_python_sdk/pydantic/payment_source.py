# coding: utf-8

"""
    Orders

    An order represents a payment between two or more parties. Use the Orders API to create, update, retrieve, authorize, and capture orders.

    The version of the OpenAPI document: 2.13
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel, ConfigDict

from pay_pal_checkout_python_sdk.pydantic.apple_pay_request import ApplePayRequest
from pay_pal_checkout_python_sdk.pydantic.bancontact_request import BancontactRequest
from pay_pal_checkout_python_sdk.pydantic.blik_request import BlikRequest
from pay_pal_checkout_python_sdk.pydantic.card_request import CardRequest
from pay_pal_checkout_python_sdk.pydantic.eps_request import EpsRequest
from pay_pal_checkout_python_sdk.pydantic.giropay_request import GiropayRequest
from pay_pal_checkout_python_sdk.pydantic.ideal_request import IdealRequest
from pay_pal_checkout_python_sdk.pydantic.mybank_request import MybankRequest
from pay_pal_checkout_python_sdk.pydantic.p24_request import P24Request
from pay_pal_checkout_python_sdk.pydantic.paypal_wallet import PaypalWallet
from pay_pal_checkout_python_sdk.pydantic.sofort_request import SofortRequest
from pay_pal_checkout_python_sdk.pydantic.token import Token
from pay_pal_checkout_python_sdk.pydantic.trustly_request import TrustlyRequest
from pay_pal_checkout_python_sdk.pydantic.venmo_wallet_request import VenmoWalletRequest

class PaymentSource(BaseModel):
    card: typing.Optional[CardRequest] = Field(None, alias='card')

    token: typing.Optional[Token] = Field(None, alias='token')

    paypal: typing.Optional[PaypalWallet] = Field(None, alias='paypal')

    bancontact: typing.Optional[BancontactRequest] = Field(None, alias='bancontact')

    blik: typing.Optional[BlikRequest] = Field(None, alias='blik')

    eps: typing.Optional[EpsRequest] = Field(None, alias='eps')

    giropay: typing.Optional[GiropayRequest] = Field(None, alias='giropay')

    ideal: typing.Optional[IdealRequest] = Field(None, alias='ideal')

    mybank: typing.Optional[MybankRequest] = Field(None, alias='mybank')

    p24: typing.Optional[P24Request] = Field(None, alias='p24')

    sofort: typing.Optional[SofortRequest] = Field(None, alias='sofort')

    trustly: typing.Optional[TrustlyRequest] = Field(None, alias='trustly')

    apple_pay: typing.Optional[ApplePayRequest] = Field(None, alias='apple_pay')

    google_pay: typing.Optional[typing.Union[bool, date, datetime, dict, float, int, list, str, None]] = Field(None, alias='google_pay')

    venmo: typing.Optional[VenmoWalletRequest] = Field(None, alias='venmo')

    model_config = ConfigDict(
        protected_namespaces=(),
        arbitrary_types_allowed=True
    )
