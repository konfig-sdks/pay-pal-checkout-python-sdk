# coding: utf-8

"""
    Orders

    An order represents a payment between two or more parties. Use the Orders API to create, update, retrieve, authorize, and capture orders.

    The version of the OpenAPI document: 2.13
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel, ConfigDict

from pay_pal_checkout_python_sdk.pydantic.address_portable import AddressPortable
from pay_pal_checkout_python_sdk.pydantic.name import Name
from pay_pal_checkout_python_sdk.pydantic.shipping_option import ShippingOption

class ShippingDetail(BaseModel):
    name: typing.Optional[Name] = Field(None, alias='name')

    # A classification for the method of purchase fulfillment (e.g shipping, in-store pickup, etc). Either `type` or `options` may be present, but not both.
    type: typing.Optional[Literal["SHIPPING", "PICKUP_IN_PERSON", "PICKUP_IN_STORE", "PICKUP_FROM_PERSON"]] = Field(None, alias='type')

    # An array of shipping options that the payee or merchant offers to the payer to ship or pick up their items.
    options: typing.Optional[typing.List[ShippingOption]] = Field(None, alias='options')

    address: typing.Optional[AddressPortable] = Field(None, alias='address')

    model_config = ConfigDict(
        protected_namespaces=(),
        arbitrary_types_allowed=True
    )
